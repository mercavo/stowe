<%% 
  if permitted_params.match(/account_id/)
    @model = "@current_account.#{plural_table_name}"
    @base = "AuthorizedController"
  else
    @model = "#{singular_table_name.capitalize}"
    @base = "AdminController"
  end
%>
<%% module_namespacing do -%>
class <%%= controller_class_name %>Controller < <%%= @base %>
  before_action :set_<%%= singular_table_name %>, only: %i[ show edit update destroy ]

  # GET <%%= route_url %>
  def index
    search
    
    return render turbo_stream: turbo_stream.update('loadingData', partial: '<%%= controller_class_name.downcase %>/table', locals: {<%%= plural_table_name %>: @<%%= plural_table_name %>} ) if params[:q].present?
  end

  # GET <%%= route_url %>/1
  def show
  end

  # GET <%%= route_url %>/new
  def new
    @<%%= singular_table_name %> = <%%= orm_class.build(class_name) %>
  end

  # GET <%%= route_url %>/1/edit
  def edit
  end

  # POST <%%= route_url %>
  def create
    @<%%= singular_table_name %> = <%%=@model%>.new(<%%= singular_table_name %>_params)
    respond_to do |format|
      if @<%%= orm_instance.save %>
        format.turbo_stream do
            flash[:ok] = t('save_msg')
            search
            render turbo_stream: 
              [
                turbo_stream.prepend('flash', partial: 'layouts/shared/flashes', locals: flash),
                turbo_stream.replace('loadingData', partial: '<%%= controller_class_name.downcase %>/table', locals: {records: @records} )
              ]
          end
      else
         format.html { render :new, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT <%%= route_url %>/1
  def update
    respond_to do |format|
      if @<%%= orm_instance.update("#{singular_table_name}_params") %>
        format.turbo_stream do
              flash[:ok] = t('edit_msg')
              search
              render turbo_stream: 
                [
                  turbo_stream.prepend('flash', partial: 'layouts/shared/flashes', locals: flash),
                  turbo_stream.replace('loadingData', partial: '<%%= controller_class_name.downcase %>/table', locals: {records: @records} )
                ]
            end
      else
        render :edit, status: :unprocessable_entity
      end
    end
  end

  # DELETE <%%= route_url %>/1
  def destroy
    @<%%= orm_instance.destroy %>
    redirect_to <%%= index_helper %>_url, notice: <%%= %("#{human_name} was successfully destroyed.") %>
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_<%%= singular_table_name %>
      @<%%= singular_table_name %> = <%%=@model%>.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def <%%= "#{singular_table_name}_params" %>
      <%%- if attributes_names.empty? -%>
      params.fetch(:<%%= singular_table_name %>, {})
      <%%- else -%>
      params.require(:<%%= singular_table_name %>).permit(<%%= permitted_params %>)
      <%%- end -%>
    end

    def search     
      @<%%= plural_table_name %> = pagy( <%%=@model%>.search(params[:q]))
    end
end
<%% end -%>
